#!/usr/bin/env python2
#
# src/competence-types - implement the /competence_types resource
#
# Copyright 2015 Suomen Tilaajavastuu Oy
# All rights reserved.


import unifiedapi


resource_type = u'competence_type'


competence_type_prototype_v0 = {
    u'type': u'',
    u'id': u'',
    u'revision': u'',
}


competence_type_prototype_current = competence_type_prototype_v1 = {
    u'type': u'',
    u'id': u'',
    u'revision': u'',
    u'competence_type_id': u'',
    u'names': [
        {
            u'locale': u'',
            u'name': u''
        }
    ],
    u'descriptions': [
        {
            u'locale': u'',
            u'description': u''
        }
    ]
}


def validate_competence_type(obj):
    pass


if __name__ == '__main__':
    vs = unifiedapi.VersionedStorage()
    vs.set_resource_type(resource_type)

    vs.start_version(u'v0', None)
    vs.add_prototype(competence_type_prototype_v0)

    vs.start_version(u'v1', None)
    vs.add_prototype(competence_type_prototype_v1)
    vs.add_prototype(unifiedapi.listener_prototype, auxtable=u'listener')
    vs.add_prototype(
        unifiedapi.notification_prototype, auxtable=u'notification')

    app = unifiedapi.BackendApplication()
    app.set_versioned_storage(vs)

    listener_resource = unifiedapi.ListenerResource()
    listener_resource.set_top_resource_path(
        resource_type, u'/competence_types')
    app.add_resource(listener_resource)

    resource = unifiedapi.ListResource()
    resource.set_path(u'/competence_types')
    resource.set_item_type(resource_type)
    resource.set_item_prototype(competence_type_prototype_current)
    resource.set_item_validator(validate_competence_type)
    resource.set_listener(listener_resource)
    app.add_resource(resource)

    app.run()
