#!/usr/bin/env python2
#
# src/orgs.py - implement the /orgs resource
#
# Copyright 2015 Suomen Tilaajavastuu Oy
# All rights reserved.


import unifiedapi


org_prototype = {
    u'type': u'',
    u'id': u'',
    u'names': [u''],
    u'country': u'',
    u'gov_org_ids': [
        {
            u'country': u'',
            u'org_id_type': u'',
            u'gov_org_id': u'',
        },
    ],
    u'contacts': [
        {
            u'contact_type': u'',
            u'contact_source': u'',
            u'contact_timestamp': u'',
            u'phone_number': u'',
            u'full_address': u'',
            u'country': u'',
            u'address_lines': [u''],
            u'post_code': u'',
            u'post_area': u'',
        },
    ],
    u'is_luotettava_kumppani_member': False,
}


class CreateOrgsTables_v1(unifiedapi.StoragePreparationStep):

    def run(self, db):
        db.create_table(
            u'org',
            (u'type', unicode),
            (u'id', unicode),
            (u'country', unicode),
            (u'is_luotettava_kumppani_member', bool))

        db.create_table(
            u'org_names',
            (u'id', unicode),
            (u'list_pos', int),
            (u'value', unicode))

        db.create_table(
            u'org_gov-org-ids',
            (u'id', unicode),
            (u'list_pos', int),
            (u'country', unicode),
            (u'org_id_type', unicode),
            (u'gov_org_id', unicode))

        db.create_table(
            u'org_contacts',
            (u'id', unicode),
            (u'list_pos', int),
            (u'contact_type', unicode),
            (u'contact_source', unicode),
            (u'contact_timestamp', unicode),
            (u'phone_number', unicode),
            (u'full_address', unicode),
            (u'country', unicode),
            (u'post_code', unicode),
            (u'post_area', unicode))

        db.create_table(
            u'org_contacts_address-lines',
            (u'id', unicode),
            (u'dict_list_pos', int),
            (u'list_pos', int),
            (u'value', unicode))


class NamelessOrg(unifiedapi.ValidationError):

    msg = u'Organisation {id} does not have any names'


def validate_org(obj):
    if not obj[u'names']:
        raise NamelessOrg(id=obj[u'id'])


if __name__ == '__main__':
    prep = unifiedapi.StoragePreparer()
    prep.add_step(u'create-orgs-tables-v1', CreateOrgsTables_v1())

    resource = unifiedapi.ListResource()
    resource.set_path(u'/orgs')
    resource.set_item_type(u'org')
    resource.set_item_prototype(org_prototype)
    resource.set_item_validator(validate_org)
    resource.set_storage_preparer(prep)

    app = unifiedapi.BackendApplication()
    app.set_resource(resource)
    app.run()
