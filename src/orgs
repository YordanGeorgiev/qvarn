#!/usr/bin/env python2
#
# src/orgs.py - implement the /orgs resource
#
# Copyright 2015 Suomen Tilaajavastuu Oy
# All rights reserved.


import unifiedapi


resource_type = u'org'


org_prototype = {
    u'type': u'',
    u'id': u'',
    u'revision': u'',
    u'country': u'',
    u'names': [u''],
    u'gov_org_ids': [
        {
            u'country': u'',
            u'org_id_type': u'',
            u'gov_org_id': u'',
        },
    ],
    u'contacts': [
        {
            u'contact_type': u'',
            u'contact_source': u'',
            u'contact_timestamp': u'',
            u'phone_number': u'',
            u'email_address': u'',
            u'full_address': u'',
            u'country': u'',
            u'address_lines': [u''],
            u'post_code': u'',
            u'post_area': u'',
        },
    ],
    u'is_luotettava_kumppani_member': False,
}


org_sync_prototype = {
    u'sync_sources': [
        {
            u'sync_source': u'',
            u'sync_id': u'',
        },
    ],
    u'sync_revision': u'',
}


class NamelessOrg(unifiedapi.ValidationError):

    msg = u'Organisation {id} does not have any names'


def validate_org(obj):
    if not obj[u'names']:
        raise NamelessOrg(id=obj[u'id'])


if __name__ == '__main__':
    app = unifiedapi.BackendApplication()

    vs = unifiedapi.VersionedStorage()
    vs.set_resource_type(resource_type)
    vs.start_version(u'v1', None)
    vs.add_prototype(org_prototype)
    vs.add_prototype(org_sync_prototype, subpath=u'sync')
    vs.add_prototype(unifiedapi.listener_prototype, auxtable=u'listener')
    vs.add_prototype(
        unifiedapi.notification_prototype, auxtable=u'notification')
    app.set_versioned_storage(vs)

    listener_resource = unifiedapi.ListenerResource()
    listener_resource.set_top_resource_path(resource_type, u'/orgs')
    app.add_resource(listener_resource)

    resource = unifiedapi.ListResource()
    resource.set_path(u'/orgs')
    resource.set_item_type(resource_type)
    resource.set_item_prototype(org_prototype)
    resource.set_item_validator(validate_org)
    resource.set_subitem_prototype(u'sync', org_sync_prototype)
    resource.set_listener(listener_resource)
    app.add_resource(resource)

    app.run()
