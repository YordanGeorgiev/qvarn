#!/usr/bin/python2
#
# Reads scopes from STDIN, gets JWT from gluu and writes it to STDOUT.
# The API URL is given as a command line argument.
#
# The API client id and corresponding secret are stored in a file,
# either ~/.config/qvarn/createtoken.conf (an INI file, with sections
# named after the API URL), or a file named in the environment variable
# QVARN_CREATETOKEN_CONF.

import ConfigParser, os, sys, requests, base64

api_url = sys.argv[1]

scopes = sys.stdin.read().strip()

default_filename = os.path.expanduser('~/.config/qvarn/createtoken.conf')
filename = os.environ.get('QVARN_CREATETOKEN_CONF', default_filename)

cp = ConfigParser.ConfigParser()
cp.read([filename])
if not cp.has_section(api_url):
    sys.stderr.write(
        'In config file {}, no section {}'.format(filename, api_url))
    sys.exit(2)

token_endpoint_url = u'{}/auth/token'.format(api_url)
client_id = cp.get(api_url, 'client_id')
client_secret = cp.get(api_url, 'client_secret')

basic_auth_token = base64.standard_b64encode(client_id + u':' + client_secret)

response = requests.post(token_endpoint_url, {
    u'grant_type': u'client_credentials',
    u'scope': scopes
}, headers={
    u'Authorization': u'Basic ' + basic_auth_token
}, verify=False)

if not response.ok:
    sys.stderr.write(str(response.status_code) + u'\n')
    sys.stderr.write(str(response.headers) + u'\n')
    sys.stderr.write(str(response.json()) + u'\n')
    sys.exit(1)

sys.stdout.write(response.json()[u'access_token'] + u'\n')
