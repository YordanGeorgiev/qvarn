#!/bin/sh
#
# format-as-pdf - Format a Markdown document as PDF
#
# Usage: format-as-pdf OUTPUT.PDF SOURCE...
#
# This script formats a Markdown document (possibly split into several
# files: all files need to named on the command line) into a PDF file,
# using the typographical styling appropriate for Tilaajavastuu
# technical documents.

set -eu


die()
{
    echo "$@" 1>&2
    exit 1
}


inputs_are_newer()
{
    local output="$1"
    shift

    local input
    for input in "$@"
    do
        if [ "$input" -nt "$output" ] || [ ! -e "$output" ]
        then
            return 0
        fi
    done
    return 1
}


process_dia()
{
    local input
    for input in "$@"
    do
        local eps="$(basename "$input" .dia).eps"
        if inputs_are_newer "$eps" "$input"
        then
            echo "dia $input -> $eps"
            dia --export="$eps" --filter=eps-pango "$input"
        fi
    done
}


process_dot()
{
    local input
    for input in "$@"
    do
        local output="$(basename "$input" .dot).eps"
        if inputs_are_newer "$output" "$input"
        then
            echo "dot $input -> $output"
            dot -Teps "$input" > "$output"
        fi
    done
}


process_markdown()
{
    local output="$1"
    shift

    echo "pandoc $1... -> $output"
    pandoc \
        --from=markdown+header_attributes+auto_identifiers \
        --output="$output" \
        --chapters \
        --number-sections \
        --toc --toc-depth=2 \
        --latex-engine=xelatex \
        -V geometry:a4paper \
        -V documentclass=report \
        -V fontsize:12pt \
        -V mainfont:"Verdana" \
        -V sansfont:"Liberation Sans" \
        -V monofont:"Courier New" \
        -V geometry:"top=2cm, bottom=2.5cm, left=2cm, right=1cm" \
        "$@"
}


remove_temp_eps()
{
    local x
    for x in "$@"
    do
        local base="$(basename "$x" .dia)"
        rm -f "${base}-eps-converted-to.pdf"
    done
}


output="$1"
shift

dia=""
dot=""
markdown=""
for input in "$@"
do
    case "$input" in
        *.dia) dia="$dia $input" ;;
        *.dot) dot="$dot $input" ;;
        *.mdwn) markdown="$markdown $input" ;;
        *.yarn) markdown="$markdown $input" ;;
        *) die "Don't know what to do with $input" ;;
    esac
done

process_dia $dia
process_dot $dot
if inputs_are_newer "$output" "$@"
then
    process_markdown "$output" $markdown
    remove_temp_eps $dia
fi
