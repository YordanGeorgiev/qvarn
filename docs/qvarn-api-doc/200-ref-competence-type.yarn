<!--
Copyright 2015, 2016 Suomen Tilaajavastuu Oy

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->


`/competence_types`
-------------------

This resource stores information about different types of competences.
See [competences](#resource-competences).

Synopsis:

* `GET /competence_types` --- get a list of ids of all competence types.
* `POST /competence_types` --- add a new competence type.
* `GET /competence_types/<id>` --- get the information about a specific
  competence type.
* `PUT /competence_types/<id>` --- update the information about a specific
  competence type.
* `DELETE /competence_types/<id>` --- remove a competence certification.

Errors:

* There are no errors that are specific to this resource.

Example result for a competence type:

    EXAMPLE
    {
        "type": "competence_type",
        "id": "123",
	"competence_type_id": "NAP",
        "names": [
            {
                "locale": "fi_FI",
                "name": "torkkuminen"
            },
            {
                "locale": "en_GB",
                "name": "napping"
            }
        ],
        "descriptions": [
            {
                "locale": "fi_FI",
                "description": "Saa torkkua tyoaikana"
            },
            {
                "locale": "en_GB",
                "description": "Allowed to nap during work hours"
            }
        ]
    }

Fields in the result:

* `competence_type_id` --- a user defined identification for this
  competence type
* `names` --- a list of names for the competence type, perhaps in
  different locales; there can be multiple names (aliases) in one
  locale; the fields for one entry are:
    * `locale` --- the locale code
    * `name` --- a name for the competence in the given locale
* `descriptions` --- a list of descriptions for the competence type;
  the description can be given in any locale, but only once per
  locale
    * `locale` --- the locale code
    * `description` --- the description for the competence in the
      given locale

### Tests

We create a new competence type, update them, and delete them.

    SCENARIO manage a competence type

Client has needed access rights for competence type resource.

    GIVEN client has access to scopes
    ... "uapi_competence_types_post uapi_competence_types_get
    ...  uapi_competence_types_id_get uapi_competence_types_id_put
    ...  uapi_competence_types_id_delete"

Try to create a new competence type. Test with an invalid field.

    WHEN client POSTs /competence_types with {"invalid_field": true}
    THEN HTTP status code is 400

Create a new competence type.

    WHEN client POSTs /competence_types with
    ... {
    ...	    "competence_type_id": "NAP",
    ...     "names": [
    ...         {
    ...             "locale": "fi_FI",
    ...             "name": "torkkuminen"
    ...         },
    ...         {
    ...             "locale": "en_GB",
    ...             "name": "napping"
    ...         }
    ...     ],
    ...     "descriptions": [
    ...         {
    ...             "locale": "fi_FI",
    ...             "description": "Saa torkkua tyoaikana"
    ...         },
    ...         {
    ...             "locale": "en_GB",
    ...             "description": "Allowed to nap during work hours"
    ...         }
    ...     ]
    ... }
    THEN HTTP status code is 201
    AND result matches
    ... {
    ...     "type": "competence_type",
    ...	    "competence_type_id": "NAP",
    ...     "names": [
    ...         {
    ...             "locale": "fi_FI",
    ...             "name": "torkkuminen"
    ...         },
    ...         {
    ...             "locale": "en_GB",
    ...             "name": "napping"
    ...         }
    ...     ],
    ...     "descriptions": [
    ...         {
    ...             "locale": "fi_FI",
    ...             "description": "Saa torkkua tyoaikana"
    ...         },
    ...         {
    ...             "locale": "en_GB",
    ...             "description": "Allowed to nap during work hours"
    ...         }
    ...     ]
    ... }
    AND result has key "id" containing a string, saved as $ID1
    AND HTTP Location header is API_URL/competence_types/$ID1
    AND result has key "revision" containing a string, saved as $REV1

Check that the record is there.

    WHEN client GETs /competence_types
    THEN HTTP status code is 200
    AND result has key "resources", a list containing {"id": "$ID1"}

    WHEN client GETs /competence_types/$ID1
    THEN HTTP status code is 200
    AND result matches
    ... {
    ...     "type": "competence_type",
    ...	    "competence_type_id": "NAP",
    ...     "names": [
    ...         {
    ...             "locale": "fi_FI",
    ...             "name": "torkkuminen"
    ...         },
    ...         {
    ...             "locale": "en_GB",
    ...             "name": "napping"
    ...         }
    ...     ],
    ...     "descriptions": [
    ...         {
    ...             "locale": "fi_FI",
    ...             "description": "Saa torkkua tyoaikana"
    ...         },
    ...         {
    ...             "locale": "en_GB",
    ...             "description": "Allowed to nap during work hours"
    ...         }
    ...     ]
    ... }
    AND result has key "id" containing a string, saved as $ID2
    AND values "$ID1" and "$ID2" are identical
    AND result has key "revision" containing a string, saved as $REV2
    AND values "$REV1" and "$REV2" are identical

Update the record.

    WHEN client PUTs /competence_types/$ID1 with
    ... {
    ...     "revision": "$REV1",
    ...	    "competence_type_id": "NAP",
    ...     "names": [
    ...         {
    ...             "locale": "fi_FI",
    ...             "name": "torkkuminen"
    ...         }
    ...     ],
    ...     "descriptions": [
    ...         {
    ...             "locale": "fi_FI",
    ...             "description": "Saa torkkua tyoaikana"
    ...         }
    ...     ]
    ... }
    THEN HTTP status code is 200
    AND result matches
    ... {
    ...	    "competence_type_id": "NAP",
    ...     "names": [
    ...         {
    ...             "locale": "fi_FI",
    ...             "name": "torkkuminen"
    ...         }
    ...     ],
    ...     "descriptions": [
    ...         {
    ...             "locale": "fi_FI",
    ...             "description": "Saa torkkua tyoaikana"
    ...         }
    ...     ]
    ... }
    AND result has key "id" containing a string, saved as $ID3
    AND values "$ID1" and "$ID3" are identical
    AND result has key "revision" containing a string, saved as $REV3

Delete the record.

    WHEN client DELETEs /competence_types/$ID1
    THEN HTTP status code is 200

    WHEN client GETs /competence_types/$ID1
    THEN HTTP status code is 404
